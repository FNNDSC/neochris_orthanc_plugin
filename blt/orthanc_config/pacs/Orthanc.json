{
  // The logical name of this instance of Orthanc. This one is
  // displayed in Orthanc Explorer and at the URI "/system".
  "Name" : "NeoChRIS Test PACS",

  // Path to the directory that holds the heavyweight files (i.e. the
  // raw DICOM instances). Backslashes must be either escaped by
  // doubling them, or replaced by forward slashes "/".
  "StorageDirectory" : "/var/lib/orthanc/db",

  // Path to the directory that holds the SQLite index (if unset, the
  // value of StorageDirectory is used). This index could be stored on
  // a RAM-drive or a SSD device for performance reasons.
  "IndexDirectory" : "/var/lib/orthanc/db",

  // List of paths to the custom Lua scripts that are to be loaded
  // into this instance of Orthanc
  "LuaScripts" : [],

  // List of paths to the plugins that are to be loaded into this
  // instance of Orthanc (e.g. "./libPluginTest.so" for Linux, or
  // "./PluginTest.dll" for Windows). These paths can refer to
  // folders, in which case they will be scanned non-recursively to
  // find shared libraries. Backslashes must be either escaped by
  // doubling them, or replaced by forward slashes "/".
  "Plugins" : [ 
    "/usr/share/orthanc/plugins", "/usr/local/share/orthanc/plugins"
  ],

  // Maximum number of processing jobs that are simultaneously running
  // at any given time. A value of "0" indicates to use all the
  // available CPU logical cores. To emulate Orthanc <= 1.3.2, set
  // this value to "1".
  "ConcurrentJobs" : 2,

  // Defines the number of threads that are used to execute each type of
  // jobs (for the jobs that can be parallelized).
  // A value of "0" indicates to use all the available CPU logical cores.
  // (new in Orthanc 1.11.3)
  "JobsEngineThreadsCount" : {
    "ResourceModification": 1     // for /anonymize, /modify
  },

  // Maximum number of completed jobs that are kept in memory. A
  // processing job is considered as complete once it is tagged as
  // "Success" or "Failure". Since Orthanc 1.5.0, a value of "0"
  // indicates to keep no job in memory (i.e. jobs are removed from
  // the history as soon as they are completed), which prevents the
  // use of some features of Orthanc (typically, synchronous mode in
  // REST API) and should be avoided for non-developers.
  "JobsHistorySize" : 10,

  // Whether to save the jobs into the Orthanc database. If this
  // option is set to "true", the pending/running/completed jobs are
  // automatically reloaded from the database if Orthanc is stopped
  // then restarted (except if the "--no-jobs" command-line argument
  // is specified). This option should be set to "false" if multiple
  // Orthanc servers are using the same database (e.g. if PostgreSQL
  // or MariaDB/MySQL is used).
  "SaveJobs" : false,

  /**
   * Configuration of the HTTP server
   **/

  // Enable the HTTP server. If this parameter is set to "false",
  // Orthanc acts as a pure DICOM server. The REST API and Orthanc
  // Explorer will not be available.
  "HttpServerEnabled" : true,
  "RemoteAccessAllowed" : true,
  "AuthenticationEnabled" : false,

  /**
   * Configuration of the DICOM server
   **/

  // Enable the DICOM server. If this parameter is set to "false",
  // Orthanc acts as a pure REST server. It will not be possible to
  // receive files or to do query/retrieve through the DICOM protocol.
  "DicomServerEnabled" : true,

  // The DICOM Application Entity Title (cannot be longer than 16
  // characters)
  "DicomAet" : "PACS",

  // Check whether the called AET corresponds to the AET of Orthanc
  // during an incoming DICOM SCU request
  "DicomCheckCalledAet" : false,

  // The DICOM port
  "DicomPort" : 4242,

  // Set the timeout (in seconds) after which the DICOM associations
  // are closed by the Orthanc SCP (server) if no further DIMSE
  // command is received from the SCU (client).
  // A value of 0 means "no timeout".
  "DicomScpTimeout" : 30,

  /**
   * Security-related options for the DICOM connections (SCU/SCP)
   **/

  // Whether DICOM TLS is enabled in the Orthanc SCP (new in Orthanc 1.9.0)
  "DicomTlsEnabled" : false,

  /**
   * Network topology
   **/

  // The list of the known DICOM modalities. This option is ignored if
  // "DicomModalitiesInDatabase" is set to "true", in which case you
  // must use the REST API to define modalities.
  "DicomModalities" : {
    "DEV": [ "DEV", "dev", 4242 ]
  },

  // Whether to store the DICOM modalities in the Orthanc database
  // instead of in this configuration file (new in Orthanc 1.5.0)
  "DicomModalitiesInDatabase" : false,

  // Number of threads that are used by the embedded DICOM server.
  // This defines the number of concurrent DICOM operations that can
  // be run when Orthanc is acting as SCP. 
  // Note: This is not limiting the number of concurrent connections
  // but the number of concurrent DICOM operations.
  // E.g, with a single thread, if a C-Find is received during
  // e.g the transcoding of an incoming C-Store, the C-Find will 
  // be processed only at the end of the C-Store operation but both
  // DICOM assocations will remain active. 
  // (new in Orthanc 1.10.0, before this version, the value was 
  // fixed to 4)
  "DicomThreadsCount" : 4,

  // Whether to run DICOM C-MOVE operations synchronously. If set to
  // "false" (asynchronous mode), each incoming C-MOVE request results
  // in the creation of a new background job. Up to Orthanc 1.3.2, the
  // implicit behavior was to use synchronous C-MOVE ("true"). Between
  // Orthanc 1.4.0 and 1.4.2, the default behavior was set to
  // asynchronous C-MOVE ("false"). Since Orthanc 1.5.0, the default
  // behavior is back to synchronous C-MOVE ("true", which ensures
  // backward compatibility with Orthanc <= 1.3.2).
  "SynchronousCMove" : true,

  // Maximum number of completed jobs that are kept in memory. A
  // processing job is considered as complete once it is tagged as
  // "Success" or "Failure". Since Orthanc 1.5.0, a value of "0"
  // indicates to keep no job in memory (i.e. jobs are removed from
  // the history as soon as they are completed), which prevents the
  // use of some features of Orthanc (typically, synchronous mode in
  // REST API) and should be avoided for non-developers.
  "JobsHistorySize" : 10,

  // Whether to save the jobs into the Orthanc database. If this
  // option is set to "true", the pending/running/completed jobs are
  // automatically reloaded from the database if Orthanc is stopped
  // then restarted (except if the "--no-jobs" command-line argument
  // is specified). This option should be set to "false" if multiple
  // Orthanc servers are using the same database (e.g. if PostgreSQL
  // or MariaDB/MySQL is used).
  "SaveJobs" : true,

  // Deidentify/anonymize the contents of the logs (notably C-FIND,
  // C-GET, and C-MOVE queries submitted to Orthanc) according to
  // Table E.1-1 of the DICOM standard (new in Orthanc 1.8.2).
  // Note that, the DICOM logs at TRACE level are not deidentified !
  "DeidentifyLogs" : false
}
